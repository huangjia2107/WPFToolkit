<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:UIResources.Themes">
    
    <Style x:Key="{x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}" 
           TargetType="{x:Type ButtonBase}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border CornerRadius="0" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="#00000000">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            </ContentPresenter>
                        </Grid>
                    </Border> 
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF808080"/>
            </Trigger> 
        </Style.Triggers>
    </Style>

    <!--NormalButton-->
    <Style x:Key="{x:Static themes:ResourceKeys.NormalButtonStyleKey}"
           BasedOn="{StaticResource {x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}}"
           TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFB1B1B1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="#FFC1C1C1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF808080"/>
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="true">
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Titlebar Button-->
    <Style x:Key="{x:Static themes:ResourceKeys.TitlebarButtonStyleKey}" 
           BasedOn="{StaticResource {x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}}" 
           TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="#FFC1C1C1"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFDDDDDD"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Close Button [ Fg:White ]-->
    <Style x:Key="{x:Static themes:ResourceKeys.FgWhiteCloseBtnStyleKey}" 
           BasedOn="{StaticResource {x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}}"  
           TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="#FFDC0505"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFC30404"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Close Button [ Fg:Red ]-->
    <Style x:Key="{x:Static themes:ResourceKeys.FgRedCloseBtnStyleKey}"
           BasedOn="{StaticResource {x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}}"  
           TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Red"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="#FFDC0505"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFC30404"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--RepeatButton-->
    <Style x:Key="{x:Static themes:ResourceKeys.NormalRepeatButtonStyleKey}"
           BasedOn="{StaticResource {x:Static themes:ResourceKeys.NoBgButtonBaseStyleKey}}"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="#FFB1B1B1"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="True">
                <Setter Property="Background" Value="#FFC1C1C1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#FF808080"/>
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptured" Value="true">
                <Setter Property="Background" Value="#FFDDDDDD"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>